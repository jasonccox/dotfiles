set nocompatible            " don't worry about being compatible with Vi

" =============================================================================
" COLORS
" =============================================================================

" make backgound transparent in tmux so tmux background color change on
" inactive panes is shown
if !empty($TMUX)
    let g:jellybeans_overrides = {
    \    'background': {
    \        'guibg': 'none',
    \        'ctermbg': 'none'
    \    }
    \}
" otherwise, just go all black
else
    let g:jellybeans_overrides = {
    \    'background': {
    \        'guibg': '000000',
    \        'ctermbg': '000000'
    \    }
    \}
endif

colorscheme jellybeans      " my preferred colorscheme
syntax enable               " enable syntax highlighting
set cursorline              " highlight current line
set colorcolumn=81          " highlight column 81

" set languages to be highlighted within markdown
let g:markdown_fenced_languages = ['python']

" =============================================================================
" SPACES & TABS
" =============================================================================

set tabstop=4               " number of visual spaces per tab
set softtabstop=4           " number of spaces inserted when tab key is pressed
set shiftwidth=4            " number of columns to indent
set expandtab               " insert spaces when tab key is pressed
set autoindent              " turn on autoindent
set smartindent             " be smarter about autoindenting
set list                    " show invisible characters, as described below
set listchars=tab:→\ ,trail:⋅,precedes:«,extends:»

" =============================================================================
" LINES
" =============================================================================

set number                  " show line numbers
set cpoptions+=n            " let the text of wrapped lines use the gutter
set scrolloff=5             " always show at least 5 lines below the cursor
set wrap                    " wrap long lines
set linebreak               " wrap lines at whitespace, not in the middle of words
set textwidth=0             " don't auto-break lines at any width

" =============================================================================
" SEARCH
" =============================================================================

set incsearch               " search as characters are typed
set hlsearch                " highlight matches
set path+=**                " recursively search sub-folbers when searching for files
set ignorecase              " make searches case-insensitive
set smartcase               " make searches case-sensitive if capitals used

" =============================================================================
" FOLDING
" =============================================================================

set foldenable              " enable folding
set foldlevelstart=10       " auto-fold things starting at 10 levels deep
set foldmethod=manual       " disable automatic fold generation - it's slow
let g:markdown_folding=1    " make folding work for markdown - must be set before
                            " built-in markdown ftplugin file is loaded

" =============================================================================
" STATUS LINE
" =============================================================================

set laststatus=2            " always display the status line
set statusline=%f\          " filename
set statusline+=%h%w%r%m    " flags
set statusline+=%y          " filetype 
set statusline+=%=          " switch to right side of screen
set statusline+=%c,\        " cursor column
set statusline+=%l\ /\ %L\  " cursor line / total lines
set statusline+=\ \         " some space
set statusline+=%P          " percent through file

set showcmd                 " show commands as they're being typed

" =============================================================================
" TAB COMPLETION
" =============================================================================

set wildmenu                " show possible matches

" ignore files I probably don't want to open in vim
set wildignore+=*.bmp,*.gif,*.ico,*.jpg,*.jpeg,*.png
set wildignore+=*.pdf,*.doc,*.docx,*.xls,*.xlsx,*.odt,*.ods,*.odg
set wildignore+=node_modules/*,bower_components/*
set wildignore+=*.min.css,*.min.js
set wildignore+=*.o,*.obj

" =============================================================================
" BACKSPACE
" =============================================================================

set backspace=indent        " allow backspacing over autoindent
set backspace+=eol          " allow backspacing over line breaks
set backspace+=start        " allow backspacing over the start of insert

" =============================================================================
" NETRW
" =============================================================================

let g:netrw_banner = 0      " don't show banner
let g:netrw_liststyle = 3   " use tree-style list
let g:netrw_winsize = 25    " when opening in a split, only use 25% of space

" =============================================================================
" KEY MAPPINGS
" =============================================================================

let mapleader = " "         " set leader to space

" temporary mappings to teach me not to navigate with the arrow keys
inoremap <Up> <Nop>
inoremap <Left> <Nop>
inoremap <Right> <Nop>
inoremap <Down> <Nop>
nnoremap <Up> <Nop>
nnoremap <Left> <Nop>
nnoremap <Right> <Nop>
nnoremap <Down> <Nop>

" easy access to fzf
nnoremap <Leader>o :FZF<CR>

" easy buffer management - shows list of buffers and then prepares buffer cmd
nnoremap <Leader>b :buffers<CR>:b<Space>

" easy access to ripgrep
nnoremap <Leader>s <Esc>:Rg<Space>

" =============================================================================
" MISC
" =============================================================================

set belloff=esc,insertmode  " no bell when pressing esc

filetype plugin indent on   " load specific plugins and indent files based on filetype
packadd! matchit            " enable improved % matching

" restore cursor position when opening file
autocmd BufReadPost *
    \ if line("'\"") >= 1 && line("'\"") <= line("$") && &ft !~# 'commit'
    \ |   exe "normal! g`\""
    \ | endif

set hidden                  " allow switching buffers without saving

" fzf integration on macOS - must go in vimrc
if isdirectory("/usr/local/opt/fzf")
    set rtp+=/usr/local/opt/fzf
endif

let g:AutoPairsCenterLine = 0 " don't move to center when pressing <CR> after {
let g:AutoPairsMultilineClose = 0 " don't jump to closing bracket on next line
