# PREFIX {{{

# change prefix to ctrl-t
unbind C-b
set -g prefix C-t
bind-key C-t send-prefix

# }}}

# COPY/PASTE {{{

# vi copy-paste keys
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection

# y in copy mode copies to system clipboard (Linux and MacOS)
if-shell "command -v xclip" "bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe 'xclip -in -selection clipboard'"
if-shell "command -v pbcopy" "bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe 'pbcopy'"

# }}}

# PANE TRAVERSAL {{{

# vi-style pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# switch to last window, since vi-style pane traversal overwrites default of 'l'
bind - last-window

# smart pane switching with awareness of Vim splits
# (https://github.com/christoomey/vim-tmux-navigator)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_vim_or_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?(g?(view|n?vim?x?)(diff)?)|(fzf)$'"
bind-key -n 'C-h' if-shell "$is_vim_or_fzf" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim_or_fzf" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim_or_fzf" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim_or_fzf" 'send-keys C-l'  'select-pane -R'
bind-key -n 'C-\' if-shell "$is_vim" 'send-keys C-\\'  'select-pane -l'
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# }}}

# LAYOUT {{{

# split window and restore last used preset layout
bind-key a "split-window; select-layout"

# in main-vertical layout, give the main pane room for at least two vim splits
set -g main-pane-width 170
set -g other-pane-width 80

# use main-vertical layout in new windows by default
set-hook -g after-new-window "select-layout main-vertical"
set-hook -g after-new-session "select-layout main-vertical"

# }}}

# STATUS BAR {{{

set -g status-style fg=white,bold,bg=black
set -g status-justify left

# don't refresh the status bar too often - it gets refreshed every bash prompt
set -g status-interval 15

# STATUS LEFT {{{

set -g status-left "  [#{=/16/...:session_name}]   "
set -g status-left-length 26
set -g status-left-style fg=white,bold

# }}}

# STATUS RIGHT {{{

set -g status-right " #(~/dotfiles/scripts/path-printer.bash '#{pane_current_path}')"
set -ga status-right "#(~/dotfiles/scripts/git-info.bash \
--prefix '   שׂ ' \
--clean '#[fg=green,bold]#[fg=default]' \
--modified '#[fg=red,bold]#[fg=default]' \
--untracked '#[fg=magenta,bold]#[fg=default]' \
--staged '#[fg=green,bold]#[fg=default]' \
--stashed '#[fg=blue,bold]#[fg=default]' \
--ahead '' \
--behind '' \
'#{pane_current_path}')"

set -ga status-right "    #{?#{pane_ssh_connected},#[fg=cyan#,bold],}#U#[fg=default]"
set -ga status-right "    #{?#{pane_ssh_connected},#[fg=cyan#,bold],}#H#[fg=default] "

set -g status-right-length 80
set -g status-right-style fg=white,bold

# }}}

# WINDOW STATUS {{{

set -g window-status-format "#[bg=brightblack] #I #W#{?window_flags, #{window_flags},} #[bg=default]"
set -g window-status-current-format "#[bg=blue] #I #W#{?window_flags, #{window_flags},} #[bg=default]"
set -g window-status-style fg=white,bold
set -g window-status-separator ' '

# configure behavior when bell rings in a window
set -g monitor-bell on # watch for bell - adds '!' flag to window title
set -g bell-action any # ring bell for bell in any window
set -g window-status-bell-style reverse # swap bg and fg colors of window title

# configure behavior when activity occurs in a window
set -g monitor-activity on # watch for activity - adds '#' flag to window title
set -g activity-action none # don't ring bell for activity in any window
set -g window-status-activity-style none # don't change style of window title

# }}}

# }}}

# PANE STYLING {{{

# match pane colors to status bar
set-window-option -g pane-active-border-style fg=blue,bg=default # active pane border
set-window-option -g pane-border-style fg=brightblack,bg=default # inactive pane border

# }}}

# MISC {{{

# reduce time listening for escape sequence - helps with vim
set escape-time 1

# make more window history available
set -g history-limit 10000

# enable focus events for vim-gitgutter
set -g focus-events on

# enable mouse
set -g mouse on

# Use tmux-256color instead of screen-256color because it has italics support.
# If tmux-256color is missing, install it:
#   tic -xe tmux-256color ~/dotfiles/tmux/tmux-256color.terminfo
set -g default-terminal "tmux-256color"

# script to add #U and #H format strings for current pane username and hostname
run-shell ~/dotfiles/tmux/tmux-current-pane-hostname/current_pane_hostname.tmux

# }}}

# vim:foldmethod=marker:foldlevel=0
